/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/behaviors.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "off";
        };

        ct_p_up: ct_p_up {
            compatible = "zmk,behavior-mod-morph";
            label = "CT_P_UP";
            bindings = <&kp P>, <&kp UP_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        ct_n_down: ct_n_down {
            compatible = "zmk,behavior-mod-morph";
            label = "CT_N_DOWN";
            bindings = <&kp N>, <&kp DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        ct_b_left: ct_b_left {
            compatible = "zmk,behavior-mod-morph";
            label = "CT_B_LEFT";
            bindings = <&kp B>, <&kp LEFT>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        ct_f_right: ct_f_right {
            compatible = "zmk,behavior-mod-morph";
            label = "CT_F_RIGHT";
            bindings = <&kp F>, <&kp RIGHT>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        mod_ctrl: mod_ctrl {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp PAGE_DOWN>;

            mods = <MOD_LCTL>;
        };

        mod_nav: mod_nav {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mod_ctrl>, <&kp PAGE_UP>;

            mods = <MOD_LALT>;
        };

        home: home {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp A>, <&kp HOME>;

            mods = <(MOD_LCTL)>;
        };

        end: end {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp E>, <&kp END>;

            mods = <(MOD_LCTL)>;
        };

        del: del {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp D>, <&kp DEL>;

            mods = <(MOD_LCTL)>;
        };

        m_cut: m_cut {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp LG(X)>;

            mods = <(MOD_LCTL)>;
        };

        m_cut_copy: m_cut_copy {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&m_cut>, <&kp LG(C)>;

            mods = <MOD_LALT>;
        };

        m_yank: m_yank {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp Y>, <&kp LG(V)>;

            mods = <(MOD_LCTL)>;
        };

        m_undo: m_undo {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp LG(Z)>;

            mods = <(MOD_LCTL)>;
        };

        w_cut: w_cut {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp LC(X)>;

            mods = <(MOD_LCTL)>;
        };

        w_cut_copy: w_cut_copy {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&w_cut>, <&kp LC(C)>;

            mods = <MOD_LALT>;
        };

        w_yank: w_yank {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp Y>, <&kp LC(V)>;

            mods = <(MOD_LCTL)>;
        };

        w_undo: w_undo {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp LC(Z)>;

            mods = <(MOD_LCTL)>;
        };
    };

    macros {
        to_folder: to_folder {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_1>,
                <&macro_release>,
                <&kp NUMBER_1>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        to_emacs: to_emacs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_2>,
                <&macro_release>,
                <&kp NUMBER_2>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 1>,
                <&macro_release>,
                <&to 1>;
        };

        to_browser: to_browser {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_3>,
                <&macro_release>,
                <&kp NUMBER_3>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        to_terminal: to_terminal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_4>,
                <&macro_release>,
                <&kp NUMBER_4>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        to_notes: to_notes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_5>,
                <&macro_release>,
                <&kp NUMBER_5>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        to_chat: to_chat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_6>,
                <&macro_release>,
                <&kp NUMBER_6>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        search: search {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_press>,
                <&kp X>,
                <&macro_release>,
                <&kp X>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_press>,
                <&kp F>,
                <&macro_release>,
                <&kp F>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_press>,
                <&kp PERCENT>,
                <&macro_release>,
                <&kp PERCENT>;
        };

        p1: p1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(A) &kp LS(C) &kp N1 &kp N0 &kp N8 &kp A &kp L &kp L &kp I &kp E &kp D &kp POUND &kp DLLR>;
            label = "P1";
        };

        p2: p2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(J) &kp E &kp R &kp G &kp O &kp T &kp A &kp S &kp S &kp N1 &kp N2 &kp N3 &kp EXCL &kp EXCL>;
            label = "P2";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        windows {
            display-name = "windows";
            bindings = <
&none    &none  &none        &kp AMPS  &kp GRAVE     &none                                    &none        &kp BACKSLASH    &kp PIPE   &none       &none     &none
&none    &kp Q  &w_cut_copy  &end      &kp R         &kp T                                    &w_yank      &kp U            &kp I      &kp O       &ct_p_up  &none
&kp TAB  &home  &kp S        &del      &ct_f_right   &kp G                                    &kp H        &kp J            &kp K      &kp L       &kp SEMI  &kp ESCAPE
&none    &kp Z  &kp X        &kp C     &mod_nav      &ct_b_left  &kp C_MUTE        &none      &ct_n_down   &kp M            &kp COMMA  &kp PERIOD  &w_undo   &none
                &none        &none     &kp LEFT_ALT  &kp LCTRL   &mt LGUI ENTER    &kp LSHFT  &lt 2 SPACE  &lt 3 BACKSPACE  &none      &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        emacs {
            display-name = "emacs";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans     &trans
&trans  &trans  &kp W   &kp E   &trans  &trans                    &kp Y   &trans  &trans  &trans  &kp P      &trans
&trans  &kp A   &trans  &kp D   &kp F   &trans                    &trans  &trans  &trans  &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &kp B   &trans    &trans  &kp N   &trans  &trans  &trans  &kp SLASH  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        num_sym {
            bindings = <
&trans             &trans          &trans            &kp AT                &kp ASTERISK  &trans                         &trans        &kp DOLLAR  &kp HASH               &trans             &trans           &trans
&trans             &kp NUMBER_1    &kp NUMBER_2      &kp NUMBER_3          &kp NUMBER_4  &kp N5                         &kp NUMBER_6  &kp N7      &kp N8                 &kp N9             &kp N0           &trans
&kp DOUBLE_QUOTES  &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp EQUAL     &kp MINUS                      &kp UNDER     &kp PLUS    &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp SINGLE_QUOTE
&trans             &kp EXCL        &kp LESS_THAN     &to_folder            &to_emacs     &to_browser  &trans    &trans  &to_terminal  &to_notes   &to_chat               &kp GREATER_THAN   &kp QUESTION     &trans
                                   &trans            &trans                &none         &kp PERCENT  &none     &trans  &trans        &trans      &trans                 &trans
            >;
        };

        fun {
            display-name = "fun";
            bindings = <
&none  &none         &none         &p1           &none         &none                                           &none              &none   &kp F10  &none   &none    &none
&none  &none         &kp W         &kp E         &none         &none                                           &kp Y              &kp F7  &kp F8   &kp F9  &kp P    &none
&p2    &kp A         &kp CARET     &kp D         &kp F         &kp C_VOLUME_UP                                 &kp C_VOLUME_DOWN  &kp F4  &kp F5   &kp F6  &kp F11  &kp F12
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &none              &none       &kp N              &kp F1  &kp F2   &kp F3  &kp F13  &none
                     &none         &none         &kp LALT      &kp LCTRL        &kp PRINTSCREEN    &bt BT_CLR  &bt BT_CLR_ALL     &none   &none    &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
